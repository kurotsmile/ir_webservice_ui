<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>Pset List</title>
    <link rel="icon" type="image/x-icon" href="/public/favicon.ico">
    <link href="/public/css/index.css?v=<%= ver %>" rel="stylesheet" />
    <link rel="stylesheet" href="/public/lib/bootstrap/bootstrap.min.css">
    <script src="/public/lib/jquery/jquery-3.6.0.min.js"></script>
    <script src="/public/lib/bootstrap/bootstrap.bundle.min.js"></script>
    <script src="/public/js/app.js?v=<%= ver %>"></script>
</head>

<body class="brown">
 
    <%- include('menu_sidebar') %>

    <div class="p-1 px-md-4 mb-1 box-shadow" id="bar_menu_top">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-12 col-md-8 col-lg-8 col-xl-8">
                    <div class="row">
                        <div class="col-1">
                            &nbsp;
                        </div>
                        <div class="col-11">
                            <h2 class="text-white pt-2" style="margin-left: -42px;">Pset List</h2>
                        </div>
                    </div>
                </div>

                <div class="col-12 col-md-4 col-lg-4 col-xl-4">
                    <div class="row">
                        <div class="col-12 col-md-8 col-lg-8 col-xl-8">
                            <div class="input-group r border mb-2 mt-2">
                                <span class="input-group-text r-left">&nbsp;</span>
                                <input type="text" placeholder="Search" class="form-control" id="inp_search">
                                <span class="input-group-text r-right"><img src="/public/SVG/Search.svg"/></span>
                            </div>
                        </div>
                        <div class="col-12 col-md-4 col-lg-4 col-xl-4">
                            <a href="#" onclick="add_pset();return false;" class="btn btn-info text-white btn-rounded f-right mb-2 mt-2 w-100 p-2"><img style="width: 25px;height: 25px;margin-right: 6px;" src="/public/SVG/Add.svg"/>Add Pset</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content Full Width -->
    <main class="">
        <div class="container-fluid">
            <table class="table table-lg table-dark table-bordered table-p-list mb-5">
                <thead>
                  <tr>
                    <th scope="col" class="col_tb_id">ID</th>
                    <th class="col_tb_name">Pset Name</th>
                    <th class="col_tb_action">Action</th>
                  </tr>
                </thead>
                <tbody id="all_item_pset"></tbody>
            </table>
        </div>
    </main>

    <div id="bar_footer" class="fixed">
        <div class="container-fluid">
            <div class="row p-3">
                <div class="col-12 text-center">
                   <img src="/public/SVG/Back.svg" onclick="prev_page();return false" role="button" id="btn_page_prev">
                   <span style="border-radius: 20px;padding-left: 20px !important;padding-right: 20px !important;" class="p-2 bg-dark m-2">
                    <span id="currentPage">1</span>/<span id="totalPages">1</span>
                   </span>
                   <img src="/public/SVG/Forward.svg" onclick="next_page();return false" role="button"  id="btn_page_next">
                </div>
            </div>
        </div>
    </div>

    <%- include('p9_alet_warning.ejs') %>

    <script>
        var listpsetData = JSON.parse('<%- JSON.stringify(psetList) %>');
        var itemsPerPage = 10;
        var currentPage = 1;
        var totalPages = Math.ceil(listpsetData.length / itemsPerPage);
        
        function add_item_p(data_p){
            var html_item='';
            html_item+='<tr>';
                html_item+='<td scope="row">'+(parseInt(data_p.index)+1)+'</td>';
                html_item+='<td>'+data_p.Name+'</td>';
                html_item+='<td>';
                    html_item+='<a href="#" onclick="show_delete(this);return false" data-id="'+data_p.ID+'" data-name="'+data_p.Name+'" data-index="'+data_p.index+'"><img src="/public/SVG/Trash.svg"></a>';
                    html_item+='<a href="#" onclick="show_copy(this);return false" data-id="'+data_p.ID+'" data-name="'+data_p.Name+'"" data-index="'+data_p.index+'"><img src="/public/SVG/Copy.svg"></a>';
                    html_item+='<a href="edit_pset?id='+data_p.ID+'&name='+data_p.Name+'"><img src="/public/SVG/Edit.svg"></a>';
                html_item+='</td>';
            html_item+='</tr>';
            return $(html_item);
        }

        function add_pset(p_name=''){
            let locate = -1;
            let n = "";
            let exist = false;

            for (let i = 0; i < listpsetData.length; i++) {
                if (!listpsetData[i].ID || listpsetData[i].ID === "") {
                    locate = i;
                    break;
                }
            }

            if (locate === -1) return;

            listpsetData[locate].ID = "P" + Math.floor(Date.now() * 1000);
            for (let j = 1; j <= listpsetData.length + 1; j++) {
                n = `P${j}`;
                exist = false;
                for (let k = 0; k < locate; k++) {
                    if (listpsetData[k].Name === n) {
                        exist = true;
                        break;
                    }
                }

                if (!exist) break;
            }

            if(p_name=='')
                listpsetData[locate].Name = n;
            else
                listpsetData[locate].Name = p_name;

            listpsetData[locate].StepCount = 0;

            var obj_data = JSON.parse('<%- JSON.stringify(jsonPDefault) %>');
            var id_file=listpsetData[locate].ID;
            obj_data["ID"]=listpsetData[locate].ID;
            obj_data["Name"]=listpsetData[locate].Name 
            $.ajax({
                        url: '/save-json',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            data_json: obj_data,
                            file_name: id_file
                        }),
                        success: function(response) {
                            console.log(response.message);
                        },
                        error: function(error) {
                            console.log(error.responseJSON.error);
                        }
            });
            save_data();
            load_list();
        }

        function show_delete(emp){
            var p_name=$(emp).data("name");
            var p_index=$(emp).data("index");
            var p_id_file=$(emp).data("id");
            var html='';

            html+='Are you sure you want to delete <b>'+p_name+'</b>?<br/>';
            html+='<b>'+p_name+'</b> is Associated width <b>'+p_name+'</b>';
            $("#box_msg_title").empty();
            $("#box_msg_body").empty();
            $("#box_msg_btn").empty();

            $("#box_msg_title").html('<div class="txt"><img src="/public/SVG/Warning.svg"/> Warning</div>');
            $("#box_msg_body").html(html);

            var btn_cancel='';
            btn_cancel=$('<a href="#" class="btn btn-secondary btn-rounded">Cancel</a>');
            $(btn_cancel).click(()=>{
                close_box_msg();
            });

            var btn_del='';
            btn_del=$('<button class="btn btn-danger btn-rounded">Delete</button>');
            $(btn_del).click(()=>{
                var index_p=parseInt(p_index);
                listpsetData[index_p].ID="";
                listpsetData[index_p].Name="";
                listpsetData[index_p].StepCount=0;
                listpsetData[index_p].Status=false;
                listpsetData.sort((a, b) => {
                    if (a.ID === "" && b.ID !== "") {return 1;}
                    if (a.ID !== "" && b.ID === "") {return -1;}
                    return 0;
                });
                $.ajax({
                    url: '/delete-file',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({file_name: p_id_file}),
                    success: function(response) {console.log(response.message);},
                    error: function(error) {console.log(error.responseJSON.error);}
                });
                
                save_data();
                load_list();
                close_box_msg();
            });
            
            $("#box_msg_btn").append(btn_cancel);
            $("#box_msg_btn").append(btn_del);

            $("#bk_dark_full").show();
            $("#box_msg").show();
        }

        function show_copy(emp){
            var p_name=$(emp).data("name");
            var html='';
            html+='<div class="w-100">';
            html+='<div class="input-group r border mb-2 mt-2 w-100">';
                html+='<span class="input-group-text r-left">&nbsp;</span>';
                html+='<input type="text" placeholder="Enter data" value="'+p_name+'_copy" class="form-control" id="inp_name_copy">';
                html+='<span class="input-group-text r-right"><img src="/public/SVG/Edit2.svg"/></span>';
                html+='</div>';
            html+='</div>';
            $("#box_msg_title").empty();
            $("#box_msg_body").empty();
            $("#box_msg_btn").empty();

            $("#box_msg_title").html('<div class="txt">Copy '+p_name+'</div>');
            $("#box_msg_body").html(html);

            var btn_cancel='';
            btn_cancel=$('<a href="#" class="btn btn-secondary btn-rounded">Cancel</a>');
            $(btn_cancel).click(()=>{
                close_box_msg();
            });

            var btn_copy='';
            btn_copy=$('<button class="btn btn-info btn-rounded text-white">Copy</button>');
            $(btn_copy).click(()=>{
                close_box_msg();
                add_pset($("#inp_name_copy").val());
            });
            
            $("#box_msg_btn").append(btn_cancel);
            $("#box_msg_btn").append(btn_copy);

            $("#bk_dark_full").show();
            $("#box_msg").show();
        }

        function close_box_msg(){
            $('#bk_dark_full').hide();
            $('#box_msg').hide();
            return false;
        }

        function load_list(){
            var length_item=0;
            $.each(listpsetData, function(index, item) {
                if(item.ID!="") length_item++;
                if(item.index==null) item.index=index;
                if(item.index==NaN) item.index=index;
            });

            if(length_item>10)
                currentPage=2;
            else
                currentPage=1;
            displayItems(currentPage)
        }

        function displayItems(page) {
            var startIndex = (page - 1) * itemsPerPage;
            var endIndex = startIndex + itemsPerPage;
            var paginatedItems = listpsetData.slice(startIndex, endIndex);
            $('#all_item_pset').empty();
            var count_index=0;
            $.each(paginatedItems, function(index, item) {
                if(item.ID!=""){
                    $('#all_item_pset').append(add_item_p(item));
                    count_index++;
                }
            });
            update_meta_nav_page();
        }

        $(document).ready(function () {
            load_list();
            $("#inp_search").on("keyup", function () {
                const value = $(this).val().toLowerCase();
                const filteredData = listpsetData.filter(item =>
                    item.Name.toLowerCase().includes(value)
                );

                if(value.trim()!=""){
                    $('#all_item_pset').empty();
                    $.each(filteredData, function(index, item) {
                        $('#all_item_pset').append(add_item_p(item));
                    });
                }else{
                    load_list();
                }

            });
        });

        function save_data(){
            $(listpsetData).each(function(index,p){
                p["index"]=index;
            });

            $.ajax({
                url: '/save-json',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    data_json: listpsetData,
                    file_name: "PsetList"
                }),
                success: function(response) {
                    console.log(response.message);
                    update_meta_nav_page();
                },
                error: function(error) {
                    console.log(error.responseJSON.error);
                }
            });
        }

        function next_page(){
            if(currentPage>=totalPages) return false;
            currentPage++;
            displayItems(currentPage);
        }

        function prev_page(){
            if(currentPage<=1) return false;
            currentPage--;
            displayItems(currentPage);
        }

        function update_meta_nav_page(){
            var count_index=0;
            $.each(listpsetData, function(index, item) {
                if(item.ID!="")count_index++;
            });
            totalPages = Math.ceil(count_index / itemsPerPage);
            $("#currentPage").html(currentPage);
            $("#totalPages").html(totalPages);
        }
    </script>
</body>

</html>