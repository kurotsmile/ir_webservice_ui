<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>Step Edit</title>
    <link rel="icon" type="image/x-icon" href="/public/favicon.ico">
    <link href="/public/css/index.css?v=<%= ver %>" rel="stylesheet" />
    <link rel="stylesheet" href="/public/lib/bootstrap/bootstrap.min.css">
    <script src="/public/lib/jquery/jquery-3.6.0.min.js"></script>
    <script src="/public/lib/bootstrap/bootstrap.bundle.min.js"></script>
    <script src="/public/js/app_web.js?v=<%= ver %>"></script>
</head>

<body class="brown">
 
    <%- include('menu_sidebar') %>
    <%- include('bar_head', { title: 'Step Edit',
        navs:[
            {label:'List Pset',link:'pset_list'},
            {label:'Edit Pset',link:'edit_pset?id='+id},
            {label:'Forward Operation',link:'forward_operation?id='+id}
        ],
        back:'forward_operation?id='+id}) 
    %>

    <% const stepData=jsonData.Steps[index_step];%>
    <!-- Main Content Full Width -->
    <main>
        <div class="container-fluid mb-5 pb-5" id="all_fields"></div>
        <div class="mt-5">&nbsp;</div>
    </main>

    <div id="bar_footer" class="fixed2">
        <div class="container-fluid">
            <div class="row p-3">
                <div class="col-12">
                    <span class="space-l" style="margin-left: 64px;"></span>
                    <span style="margin-right: 50px;">Tool Max Torque: 90</span> <span>Nm Tool Max Torque: 280 RPM</span>
                </div>
            </div>
        </div>
    </div>

    <div id="menu_footer" class="fixed">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <button class="btn btn-info text-white btn-rounded f-right" onclick="save_data();return false;">Save</button>
                    <a href="forward_operation?id=<%= id %>" class="btn btn-secondary text-white btn-rounded f-right">Cancel</a>
                </div>
            </div>
        </div>
    </div>

    <%- include('p9_alet_warning.ejs') %>
    
    <script>
        var data_p= JSON.parse('<%- JSON.stringify(jsonData) %>');
        var data_step={
            "Type": 1,
            "TA": {
                "TorqueTarget": 1,
                "TorqueHighLimit": 1,
                "TorqueLowLimit": 0,
                "Threshold": 0,
                "DownshiftThreshold": 0,
                "Direction": "Counterclockwise",
                "OvershootComppensation": 0,
                "AngleHighLimit": 32000,
                "AngleLowLimit": 0,
                "FreeSpeed": 100,
                "ShiftdownSpeed": 20,
                "EorDataEnable": true,
                "TorqueThresholdEnabled": true,
                "StepTransition": "Hard Shift"
            },
            "AT": {
                "AngleTarget": 1,
                "AngleHighLimit": 1,
                "AngleLowLimit": 0,
                "OvershootComppensation": 0,
                "TorqueHighLimit": 1,
                "TorqueLowLimit": 0,
                "Threshold": 0,
                "DownshiftThreshold": 0,
                "Direction": "Clockwise",
                "FreeSpeed": 100,
                "ShiftdownSpeed": 20,
                "EorDataEnable": true,
                "TorqueThresholdEnabled": true,
                "StepTransition": "Soft Shift"
            },
            "PT": {
                "Direction": "Clockwise",
                "EorDataEnable": true,
                "TorqueThresholdEnabled": true,
                "CutInAngle": 1,
                "CutInTorqueHighLimit": 0,
                "SnugTorque": 0,
                "TorqueHighLimit": 1,
                "TorqueLowLimit": 0,
                "FreeSpeed": 100,
                "Method": "Angle",
                "TargetPrevailingAngle": 0,
                "PrevailingAngleHighLimit": 0,
                "PrevailingAngleLowLimit": 0,
                "SlopeChordLength": 8,
                "SlopeDeviation": 0,
                "SlopeDeviationPersistence": 0,
                "StepTransition": "Soft Shift"
            },
            "Seat": {
                "TorqueTarget": 0,
                "AngleHighLimit": 32000,
                "AngleLowLimit": 0,
                "EorDataEnable": true,
                "TorqueThresholdEnabled": true,
                "StepTransition": "Soft Shift"
            },
            "Delay": {
                "Target": 0.1
            },
            "Backout": {
                "BackoutAngle": 1,
                "BackoutHighTorqueLimit": 0,
                "BackoutSpeed": 0,
                "EorDataEnable": true
            }
        };

        var data_form={
            "Type": 1,
            "TA": {
                "Direction": {type:"select",label:"Direction",type_field:"emp_inp",type_data:"string",data:[{value:"Clockwise",label:"Clockwise"},{value:"Counterclockwise",label:"Counterclockwise"}]},
                "TorqueTarget": {type:"input",label:"Torque Target ({u})",type_field:"emp_inp",type_data:"number"},
                "TorqueHighLimit":{type:"input",label:"Torque High Limit ({u})",type_field:"emp_inp",type_data:"number"},
                "TorqueLowLimit": {type:"input",label:"Torque Low Limit ({u})",type_field:"emp_inp",type_data:"number"},
                "AngleHighLimit": {type:"input",label:"Angle High Limit (°)",type_field:"emp_inp",type_data:"number"},
                "AngleLowLimit": {type:"input",label:"Angle Low Limit (°)",type_field:"emp_inp",type_data:"number"},
                "Threshold":{type:"input",label:"Threshold ({u})",type_field:"emp_inp",type_data:"number"},
                "FreeSpeed":{type:"input",label:"Free Speed (%)",type_field:"emp_inp",type_data:"number"},
                "OvershootComppensation": {type:"input",label:"Overshoot Comppensation (°)",type_field:"emp_inp",type_data:"number"},
                "DownshiftThreshold": {type:"input",label:"Shiftdown Torque ({u})",type_field:"emp_inp",type_data:"number"},
                "ShiftdownSpeed": {type:"input",label:"Shiftdown Speed (%)",type_field:"emp_inp",type_data:"number"},
                "EorDataEnable": {type:"bool",label:"EOR Data Enable",type_field:"emp_value",type_data:"bool"},
                "TorqueThresholdEnabled": {type:"bool",label:"Torque Threshold Enabled",type_field:"emp_value",type_data:"bool"},
                "StepTransition": {type:"select",label:"Step Transition",type_field:"emp_inp",type_data:"string",data:[{value:"Soft Shift",label:"Soft Shift"},{value:"Hard Shift",label:"Hard Shift"}]}
            },
            "AT": {
                "Direction": {type:"select",label:"Direction",type_field:"emp_inp",type_data:"string",data:[{value:"Clockwise",label:"Clockwise"},{value:"Counterclockwise",label:"Counterclockwise"}]},
                "AngleTarget":{type:"input",label:"Angle Target (°)",type_field:"emp_inp",type_data:"number"},
                "AngleHighLimit": {type:"input",label:"Angle High Limit (°)",type_field:"emp_inp",type_data:"number"},
                "AngleLowLimit": {type:"input",label:"Angle Low Limit (°)",type_field:"emp_inp",type_data:"number"},
                "TorqueHighLimit":{type:"input",label:"Torque High Limit ({u})",type_field:"emp_inp",type_data:"number"},
                "TorqueLowLimit": {type:"input",label:"Torque Low Limit ({u})",type_field:"emp_inp",type_data:"number"},
                "Threshold":{type:"input",label:"Threshold ({u})",type_field:"emp_inp",type_data:"number"},
                "FreeSpeed":{type:"input",label:"Free Speed (%)",type_field:"emp_inp",type_data:"number"},
                "OvershootComppensation": {type:"input",label:"Overshoot Comppensation (°)",type_field:"emp_inp",type_data:"number"},
                "DownshiftThreshold": {type:"input",label:"Shiftdown Torque ({u})",type_field:"emp_inp",type_data:"number"},
                "ShiftdownSpeed": {type:"input",label:"Shiftdown Speed (%)",type_field:"emp_inp",type_data:"number"},
                "EorDataEnable": {type:"bool",label:"EOR Data Enable",type_field:"emp_value",type_data:"bool"},
                "TorqueThresholdEnabled": {type:"bool",label:"Torque Threshold Enabled",type_field:"emp_value",type_data:"bool"},
                "StepTransition": {type:"select",label:"Step Transition",type_field:"emp_inp",type_data:"string",data:[{value:"Soft Shift",label:"Soft Shift"},{value:"Hard Shift",label:"Hard Shift"}]}
            },
            "PT": {
                "Direction": {type:"select",label:"Direction",type_field:"emp_inp",type_data:"string",data:[{value:"Clockwise",label:"Clockwise"},{value:"Counterclockwise",label:"Counterclockwise"}]},
                "EorDataEnable": {type:"bool",label:"EOR Data Enable",type_field:"emp_value",type_data:"bool"},
                "TorqueThresholdEnabled": {type:"bool",label:"Torque Threshold Enabled",type_field:"emp_value",type_data:"bool"},
                "CutInAngle": {type:"input",label:"Cut In Angle (°)",type_field:"emp_inp",type_data:"number"},
                "CutInTorqueHighLimit":{type:"input",label:"Cut In Torque High Limit ({u})",type_field:"emp_inp",type_data:"number"},
                "SnugTorque":{type:"input",label:"Snug Torque ({u})",type_field:"emp_inp",type_data:"number"},
                "TorqueHighLimit":{type:"input",label:"Torque High Limit ({u})",type_field:"emp_inp",type_data:"number"},
                "TorqueLowLimit":{type:"input",label:"Torque Low Limit ({u})",type_field:"emp_inp",type_data:"number"},
                "FreeSpeed":{type:"input",label:"Free Speed (%)",type_field:"emp_inp",type_data:"number"},
                "Method": {type:"select",label:"Method",type_field:"emp_inp",type_data:"string",data:[{value:"Angle",label:"Angle"},{value:"Slope",label:"Slope"}]},
                "TargetPrevailingAngle":{type:"input",label:"Target Prevailing Angle",type_field:"emp_inp",type_data:"number"},
                "PrevailingAngleHighLimit":{type:"input",label:"Prevailing Angle High Limit (°)",type_field:"emp_inp",type_data:"number"},
                "PrevailingAngleLowLimit":{type:"input",label:"Prevailing Angle Low Limit (°)",type_field:"emp_inp",type_data:"number"},
                "SlopeChordLength": {type:"input",label:"Slope Chord Length",type_field:"emp_inp",type_data:"number"},
                "SlopeDeviation": {type:"input",label:"Slope Deviation",type_field:"emp_inp",type_data:"number"},
                "SlopeDeviationPersistence":{type:"input",label:"Slope Deviation Persistence",type_field:"emp_inp",type_data:"number"},
                "StepTransition": {type:"select",label:"Step Transition",type_field:"emp_inp",type_data:"string",data:[{value:"Level and Smooth",label:"Level and Smooth"},{value:"Soft Shift",label:"Soft Shift"},{value:"Hard Shift",label:"Hard Shift"}]}
            },
            "Seat": {
                "TorqueTarget": {type:"input",label:"Torque Target ({u})",type_field:"emp_inp",type_data:"number"},
                "AngleHighLimit": {type:"input",label:"Angle High Limit (°)",type_field:"emp_inp",type_data:"number"},
                "AngleLowLimit": {type:"input",label:"Angle Low Limit (°)",type_field:"emp_inp",type_data:"number"},
                "EorDataEnable": {type:"bool",label:"EOR Data Enable",type_field:"emp_value",type_data:"bool"},
                "TorqueThresholdEnabled": {type:"bool",label:"Torque Threshold Enabled",type_field:"emp_value",type_data:"bool"},
                "StepTransition": {type:"select",label:"Step Transition",type_field:"emp_inp",type_data:"string",data:[{value:"Soft Shift",label:"Soft Shift"},{value:"Hard Shift",label:"Hard Shift"}]}
            },
            "Delay": {
                "Target": {type:"input",label:"Target (Sec)",type_field:"emp_inp",type_data:"number"}
            },
            "Backout": {
                "BackoutAngle":{type:"input",label:"Backout Angle (°)",type_field:"emp_inp",type_data:"number"},
                "BackoutHighTorqueLimit": {type:"input",label:"Backout High Torque Limit ({u})",type_field:"emp_inp",type_data:"number"},
                "BackoutSpeed": {type:"input",label:"Backout Speed (%)",type_field:"emp_inp",type_data:"number"},
                "EorDataEnable": {type:"bool",label:"EOR Data Enable",type_field:"emp_value",type_data:"bool"}
            }
        };

        var array_type=["TA","TA","AT","PT","Seat","Delay","Backout"];
        var stepItemData=JSON.parse('<%- JSON.stringify(jsonData.Steps[index_step])%>');
        var index_type=stepItemData.Type;
       
        var data_select_type=[
            {label:'Torque',value:1},
            {label:'Angle',value:2},
            {label:'Prevailling Torque',value:3},
            {label:'Flush',value:4},
            {label:'Delay',value:5},
            {label:'Backout',value:6}
        ];

        function load_form(){
            var label_type=array_type[index_type];
            var step_cur=stepItemData[label_type];
            if(step_cur==null) step_cur=data_step[label_type];

            $("#all_fields").empty();
            $("#all_fields").append(row_field('Type','Type',index_type,{type:"select",data:data_select_type}));
            $.each(data_form[label_type],function(k,v){
                var data_field=v;
                var label=data_field.label;
                var val_inp=step_cur[k];
                $("#all_fields").append(row_field(k,label,val_inp,data_field));
            });

            load_ui_event();

            $("#f_Type").change(function(){
                var v_val=$(this).val();
                index_type=parseInt(v_val);
                load_form();
            });

            check_field_Method();
        }

        function row_field(id,label,val_inp,data_field=null){
            var html_field='';
            var type_field='input';
            var type_emp='emp_inp';
            var type_data='number';

            if(data_field!=null){
                if(data_field.type) type_field=data_field.type;
                if(data_field.type_field) type_emp=data_field.type_field;
                if(data_field.type_data) type_data=data_field.type_data;
            }

            html_field+='<div id="row_f_'+id+'" class="row row-p">';
                html_field+='<div class="col-6">';
                    html_field+='<div class="label-txt">'+label.replace("({u})","("+data_p.Units+")")+'</div>';
                html_field+='</div>';
                html_field+='<div class="col-6">';
                    if(type_field=='select'){
                        html_field+='<div class="input-group r border mb-2 mt-2">';
                            html_field+='<span class="input-group-text r-left">&nbsp;</span>';
                            html_field+='<select id="f_'+id+'" class="form-select custom-combobox field_data" value="'+val_inp+'" field_key="'+id+'"  field_type="'+type_emp+'" field_type_data="'+type_data+'">';
                                $(data_field.data).each(function(index,d){
                                    if(d.value==val_inp)
                                        html_field+='<option value="'+d.value+'" selected>'+d.label+'</option>';
                                    else
                                        html_field+='<option value="'+d.value+'">'+d.label+'</option>';
                                });
                            html_field+='</select>';
                            html_field+='<span class="input-group-text r-right"><img src="/public/SVG/Dropdown.svg"/></span>';
                        html_field+='</div>';
                    }
                    else if(type_field=='bool'){
                        html_field+='<img src="/public/SVG/On.svg" style="float: right;width: 42px;"  role="button" class="mb-2 mt-3 field_data btn_switch" value="'+val_inp+'" field_key="'+id+'" field_type="'+type_emp+'" field_type_data="'+type_data+'"/>';
                    }
                    else{
                        html_field+='<div class="input-group r border mb-2 mt-2">';
                        html_field+='<span class="input-group-text r-left">&nbsp;</span>';
                        html_field+='<input id="f_'+id+'" type="text" placeholder="Enter data"  class="form-control field_data" value="'+val_inp+'" field_key="'+id+'" field_type="'+type_emp+'" field_type_data="'+type_data+'" disabled>';
                        html_field+='<span role="button" class="input-group-text r-right" onclick="show_edit(this)"><img src="/public/SVG/Edit2.svg"/></span>';
                        html_field+='</div>';
                    }
                html_field+='</div>';
            html_field+='</div>';
            return $(html_field);
        }

        function save_data() {
            var obj_p = JSON.parse('<%- JSON.stringify(jsonData) %>');
            var step_index=parseInt('<%= index_step %>');
            var id_file='<%= id %>';
            var obj_s={};
            $(".field_data").each(function (index, emp) {
                var key_emp = $(emp).attr("field_key");
                var type_emp = $(emp).attr("field_type");
                var type_data = $(emp).attr("field_type_data");
                if (key_emp !== undefined) {
                    var v='';
                    if(type_emp=="emp_value")
                        v=$(emp).attr("value");
                    else
                        v= $(emp).val();

                    if(type_data=="number") v=Number(v);
                    if(type_data=="bool") v=(v?.toLowerCase?.() === 'true');
                    console.log(key_emp+" -> "+v+" -> "+type_emp);
                    obj_s[key_emp]=v;
                }
            });

            if(obj_s.index) delete obj_s.index;
            var obj_step_new={};
            obj_step_new.Type=obj_s["Type"];
            data_step["Type"]=obj_s["Type"];
            obj_step_new=data_step;
            var label_type=array_type[obj_s.Type];
            var data_order_field=data_step[label_type];
            const keys = Object.keys(data_order_field);
            delete obj_s.Type;
            obj_p.Steps[step_index]=obj_step_new;
            obj_p.Steps[step_index][label_type]=obj_op(keys,obj_s);
            $.ajax({
                url: '/save-json',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    data_json: obj_p,
                    file_name: id_file
                }),
                success: function(response) {
                    console.log(response.message);
                    show_msg("Update success","Edit Pset");
                },
                error: function(error) {
                    console.log(error.responseJSON.error);
                }
            });
        }

        function check_field_Method(){
            if($("#f_Method").length==0) return false;

            $("#f_Method").off("change").change(function(){
                $("#f_Method").attr("value",$("#f_Method").val());
                check_field_Method();
                return false;
            });

            $("#row_f_TargetPrevailingAngle").hide();
            $("#row_f_PrevailingAngleHighLimit").hide();
            $("#row_f_PrevailingAngleLowLimit").hide();
            $("#row_f_SlopeChordLength").hide();
            $("#row_f_SlopeDeviation").hide();
            $("#row_f_SlopeDeviationPersistence").hide();

            var val_method=$("#f_Method").attr("value");

            if(val_method=="Angle"){
                $("#row_f_TargetPrevailingAngle").show();
                $("#row_f_PrevailingAngleHighLimit").show();
                $("#row_f_PrevailingAngleLowLimit").show();
            }else{
                $("#row_f_SlopeChordLength").show();
                $("#row_f_SlopeDeviation").show();
                $("#row_f_SlopeDeviationPersistence").show();
            }
        }

        $(document).ready(()=>{
            load_form();
        });
    </script>
</body>
</html>