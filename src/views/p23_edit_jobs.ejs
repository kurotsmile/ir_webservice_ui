<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>Edit Jobs</title>
    <link rel="icon" type="image/x-icon" href="/public/favicon.ico">
    <link href="/public/css/index.css?v=<%= ver %>" rel="stylesheet" />
    <link rel="stylesheet" href="/public/lib/bootstrap/bootstrap.min.css">
    <script src="/public/lib/jquery/jquery-3.6.0.min.js"></script>
    <script src="/public/lib/bootstrap/bootstrap.bundle.min.js"></script>
    <script src="/public/js/app_web.js?v=<%= ver %>"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
</head>

<body class="brown">
 
    <%- include('menu_sidebar') %>
    <%- include('bar_head', { title: 'Edit Jobs',
        navs:[
            {label:'List Jobs',link:'jobs'},
        ],
        back:'jobs'}) 
    %>
    <!-- Main Content Full Width -->
    <main>
        <div class="container-fluid">
            <div class="row row-p">
                <div class="col-6">
                    <div class="label-txt">Jobj ID</div>
                </div>
                <div class="col-6">
                    <div class="input-group r border mb-2 mt-2">
                        <span class="input-group-text r-left">&nbsp;</span>
                        <input id="j_id" type="text" placeholder="Enter data" value="<%= jsonData && jsonData.Index ? jsonData.Index : '0' %>" class="form-control" disabled>
                        <span role="button" class="input-group-text r-right" onclick="show_edit(this)"><img src="/public/SVG/Edit2.svg"/></span>
                    </div>
                </div>
            </div>

            <div class="row row-p">
                <div class="col-6">
                    <div class="label-txt">Jobj Name</div>
                </div>
                <div class="col-6">
                    <div class="input-group r border mb-2 mt-2">
                        <span class="input-group-text r-left">&nbsp;</span>
                        <input id="j_name" type="text" placeholder="Enter data" value="<%= jsonData && jsonData.Name ? jsonData.Name : '' %>" class="form-control" disabled>
                        <span role="button" class="input-group-text r-right" onclick="show_edit(this)"><img src="/public/SVG/Edit2.svg"/></span>
                    </div>
                </div>
            </div>

            <div class="row row-p mt-3 mb-3">
                <div class="col-6">
                    <div class="label-txt">Interlocks</div>
                </div>

                <div class="col-6">
                    <a href="edit_jobs_interlocks?id=<%= jsonData && jsonData.ID ? jsonData.ID : '' %>"><img src="/public/SVG/Right.svg" style="float: right" class="mb-2 mt-3"/></a>
                </div>
            </div>

            <div class="row mt-3 mb-3">
                <div class="col-10">
                    <h3 class="text-white">Add Pset(s)</h3>
                </div>

                <div class="col-2">
                    <a href="add_pset?id=<%= jsonData && jsonData.ID ? jsonData.ID : '' %>" class="btn btn-info text-white btn-rounded f-right mb-2 mt-2 p-2"><img style="width: 25px;height: 25px;margin-right: 6px;" src="/public/SVG/Add.svg"/>Add Pset</a>
                </div>
            </div>
            <table class="table table-lg table-dark table-bordered table-p-list">
                <thead>
                  <tr>
                    <th scope="col" class="col_tb_10p">ID</th>
                    <th class="col_tb_60p">Pset Name</th>
                    <th class="col_tb_30p">Action</th>
                  </tr>
                </thead>
                <tbody id="all_items"></tbody>
            </table>

        </div>
    </main>
    <%- include('p9_alet_warning.ejs') %>
    <script>
        var jsonData = JSON.parse('<%- JSON.stringify(jsonData) %>');
        var psetList=JSON.parse('<%- JSON.stringify(psetList) %>');

        function item_p(data_p){
            if(data_p.ID=="") return false;
            var html='<tr data-index="'+data_p.index+'">';
            html+='<td scope="row"><span>'+(data_p.index+1)+'</span> <a href="/alert_waring" style="display: none;"><img src="/public/SVG/Warning.svg"></a></td>';
            html+='<td>'+getPsetName(data_p.ID)+'</td>';
            html+='<td class="col_act">';
                html+='<img src="/public/SVG/Off.svg" style="width: 42px;"  role="button" class="mb-2 mt-2 field_data btn_switch" data-index="'+data_p.index+'" value="'+data_p.Complete+'" field_key="SmartSocket" field_type="emp_value" field_type_data="bool"/>';
                html+='<a href="#" role="button" onclick="show_delete(this);return false;" data-id="'+data_p.ID+'" data-index="'+data_p.index+'" data-name="'+data_p.Strategy+'"><img src="/public/SVG/Trash.svg"></a>';
                html+='<a href="#" role="button" class="btn-sort"><img src="/public/SVG/Move.svg"></a>';
                html+='<a href="/fail_rules?id_job='+jsonData.ID+'&index_p='+data_p.index+'"><img src="/public/SVG/Edit.svg"></a>';
                html+='</td>';
            html+='</tr>';
            return $(html);
        }

        $(document).ready(()=>{
            load_list();
            $("select").change(function(){
                var val=$(this).attr("value");
               $(this).attr("value",val);
            });

            $("#j_id").change(function(){
                save_data_j_cur();
            });

            $("#j_name").change(function(){
                save_data_j_cur();
            });
        });

        function save_data_j_cur(){
            var id_file=jsonData.ID;
            jsonData.Index=$("#j_id").val();
            jsonData.Name=$("#j_name").val();

            let PsetCount = jsonData.Psets.filter(item => item.ID && item.ID.trim() !== "").length;
            jsonData.PsetCount=PsetCount;

            var obj_in_list={};
            obj_in_list.ID=jsonData.ID;
            obj_in_list.Index=jsonData.Index;
            obj_in_list.Name=jsonData.Name;
            obj_in_list.PsetCount=PsetCount;
            
            $.ajax({
                url: '/save-json',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    data_json: jsonData,
                    file_name: id_file
                }),
                success: function(response) {
                    console.log(response.message);
                },error: function(error) {
                    console.log(error.responseJSON.error);
                }
            });

            $.ajax({
                    url: '/update-list-by-field',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        dataJson: obj_in_list,
                        file_name:"JobList"
                    }),
                    success: function(response) {
                        console.log(response.message);
                    },
                    error: function(error) {
                        console.log(error);
                    }
            });
        }

        function load_list(){
            $("#all_items").empty();
            let count_item=0;
            $(jsonData.Psets).each(function(index,p){
                if(p.ID!=""){
                    p.index=count_item;
                    $("#all_items").append(item_p(p));
                    count_item++;
                }
            });

            $("#all_items").sortable({
                axis: "y",
                handle: ".btn-sort",
                start: function (event, ui) {
                    ui.item.addClass("dragging");
                    ui.item.find('td').each(function(index,r) {
                        if(index==0) $(r).addClass("col_tb_id");
                        if(index==1) $(r).addClass("col_tb_name");
                        if(index==2) $(r).addClass("col_tb_action");
                    });
                },
                stop: function (event, ui){
                    ui.item.removeClass("dragging");
                    ui.item.find('td').each(function(index,r) {
                        if(index==0) $(r).addClass("col_tb_id");
                        if(index==1) $(r).addClass("col_tb_name");
                        if(index==2) $(r).addClass("col_tb_action");
                    });
                },update: function (event, ui) {
                    var id_file=jsonData.ID;
                    let newOrder = [];
                    $("#all_items tr").each(function () {
                        let originalIndex = $(this).data("index");
                        newOrder.push(jsonData.Psets[originalIndex]);
                    });

                    $(newOrder).each(function(index,s){
                        jsonData.Psets[index]=s;
                        if(jsonData.Psets[index].index) delete jsonData.Psets[index].index;
                    });
                    $.ajax({
                        url: '/save-json',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            data_json: jsonData,
                            file_name: id_file
                        }),
                        success: function(response) {
                            console.log(response.message);
                            load_list();
                        },
                        error: function(error) {
                            console.log(error.responseJSON.error);
                        }
                    });
                }
            }).disableSelection();

            $(".btn_switch").each(function(){
                if ($(this).attr("value")=="true")
                    $(this).attr("src", "/public/SVG/On.svg");
                else 
                    $(this).attr("src", "/public/SVG/Off.svg");
            });

            $(".btn_switch").click(function(){
                var val_emp=$(this).attr("value");
                var index_p=parseInt($(this).data("index"));
                var id_file=jsonData.ID;

                $(jsonData.Psets).each(function(index,p){
                    p.Complete=false;
                    delete p.index;
                });
                
                if(val_emp=="true"){
                    $(this).attr("src", "/public/SVG/Off.svg");
                    $(this).attr("value",false);
                    jsonData.Psets[index_p].Complete=false;
                }else{
                    $(this).attr("src", "/public/SVG/On.svg");
                    $(this).attr("value",true);
                    jsonData.Psets[index_p].Complete=true;
                }
                
                $.ajax({
                    url: '/save-json',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        data_json: jsonData,
                        file_name: id_file
                    }),
                    success: function(response) {
                        console.log(response.message);
                        load_list();
                    },error: function(error) {
                        console.log(error.responseJSON.error);
                    }
                });
            });
        }

        function show_delete(emp){
            var p_name=$(emp).data("name");
            var p_index=$(emp).data("index");
            var html='';
            var id_file=jsonData.ID;

            html+='Are you sure you want to delete <b>'+p_name+'</b>?<br/>';
            html+='<b>'+p_name+'</b> is Associated width <b>'+p_name+'</b>';
            $("#box_msg_title").empty();
            $("#box_msg_body").empty();
            $("#box_msg_btn").empty();

            $("#box_msg_title").html('<div class="txt"><img src="/public/SVG/Warning.svg"/> Warning</div>');
            $("#box_msg_body").html(html);

            var btn_cancel='';
            btn_cancel=$('<a href="#" class="btn btn-secondary btn-rounded">Cancel</a>');
            $(btn_cancel).click(()=>{
                close_msg();
            });

            var btn_del='';
            btn_del=$('<button class="btn btn-danger btn-rounded">Delete</button>');
            $(btn_del).click(()=>{
                jsonData.Psets[p_index]={"ID": "",
                    "Strategy": "",
                    "Target": 0,
                    "Steps": 0,
                    "Complete": true,
                    "FailRules": {
                        "BatchCount": 1,
                        "SocketAssignment": "None",
                        "ResetToPset": "None",
                        "MaxAttemptsEnable": true,
                        "MaxNokEnable": false,
                        "FailureType": "Any Failure",
                        "Action": "Retry Count",
                        "RetryCount": 1,
                        "RetryAction": "Abort"
                    }
                };
                
                let elementsWithID = jsonData.Psets.filter(item => item.ID !== "");
                let elementsWithoutID = jsonData.Psets.filter(item => item.ID === "");
                jsonData.Psets=elementsWithID.concat(elementsWithoutID);
                save_data_j_cur();
                load_list();
                close_msg();
            });
            
            $("#box_msg_btn").append(btn_cancel);
            $("#box_msg_btn").append(btn_del);

            $("#bk_dark_full").show();
            $("#box_msg").show();
        }

        function getPsetName(inID) {
            for (let i = 0; i < psetList.length; i++) {
                if (psetList[i].ID === inID) {
                    return psetList[i].Name;
                }
            }
            return "[NA]";
        }

        function handleCommand(inCmd,Psets) {
            if (inCmd.includes("ToOff")) {
                let index = parseInt(inCmd.substring(5)) - 1;
                if (!isNaN(index) && index >= 0 && index < Psets.length) {
                    Psets[index].Complete = false;
                    console.log(`Pset at index ${index} updated:`, Psets[index]);
                } else {
                    console.error("Invalid index from command:", inCmd);
                }
            }
        }
    </script>
</body>

</html>